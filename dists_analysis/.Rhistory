ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) + geom_bar(stat = "identity", color = "#d3d3d3") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes", "inter_genes", "soft_core_genes", "core_genes"))
roary_outputs$cluster = as.character(roary_outputs$cluster)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black", position = "dodge") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes", "soft_core_genes","inter_genes",  "core_genes"))
roary_outputs$cluster = as.character(roary_outputs$cluster)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes","inter_genes",  "soft_core_genes", "core_genes"))
roary_outputs$cluster = as.character(roary_outputs$cluster)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Set2") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Grays") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Greys") + theme_classic(base_size = 16)
roary_outputs.m = melt(roary_outputs[,1:4])
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes","inter_genes",  "soft_core_genes", "core_genes"))
roary_outputs$cluster = as.character(roary_outputs$cluster)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Greys") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = variable, y = values)) + geom_boxplot()
ggplot(roary_outputs.m, aes(x = variable, y = value)) + geom_boxplot()
roary_outputs.m = melt(roary_outputs[,1:5])
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes","inter_genes",  "soft_core_genes", "core_genes"))
roary_outputs$cluster = as.character(roary_outputs$cluster)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Greys") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = variable, y = value)) + geom_boxplot()
ggplot(roary_outputs.m, aes(x = variable, y = value))+
geom_violin(trim=FALSE, fill="gray")+
labs(title="Plot of length  by dose",x="Dose (mg)", y = "Length")+
geom_boxplot(width=0.1)
ggplot(roary_outputs.m, aes(x = variable, y = value))+
geom_violin(trim=FALSE, fill="gray")+
geom_boxplot(width=0.1)
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1)+
scale_fill_brewer(palette = "Greys") +
theme_bw(base_size = 16)
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1)+
scale_fill_brewer(palette = "Greys", guide = F) +
theme_bw(base_size = 16)
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1)+
scale_fill_brewer(palette = "Greys", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("")
labs = c("Rare", "Intermediate", "Soft core", "Core")
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1)+
scale_fill_brewer(palette = "Greys", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("") +
scale_x_discrete(labels = labs)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Greys") + theme_classic(base_size = 16)
ggplot(roary_outputs, aes(y = rare_genes, x = sizes)) + geom_point()
ggplot(roary_outputs, aes(x = acc_dist, y = rare_genes)) + geom_point()
ggplot(roary_outputs, aes(y = rare_genes, x = sizes)) + geom_point() +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Rare genes")
ggplot(roary_outputs, aes(y = core_genes, x = sizes)) + geom_point() +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Rare genes")
roary_outputs.m = melt(roary_outputs[,c(1:5,7)])
roary_outputs.m = melt(value.name = c("cluster","sizes"),c(roary_outputs[,1:5],7))
roary_outputs.m = melt(value.name = "cluster", c(roary_outputs[,1:5]))
roary_outputs.m = melt(value.name = "sizes", c(roary_outputs[,2:5],7))
roary_outputs.m = melt(value.name = "sizes", roary_outputs[,c(2:5,7)]))
roary_outputs.m = melt(value.name = "sizes", roary_outputs[,c(2:5,7)])
roary_outputs.m = melt(value.name = "sizes", roary_outputs[,c(7,2:5)])
roary_outputs.m = melt(value.name = "cluster", c(roary_outputs[,1:5]), roary_outputs$sizes)
roary_outputs.m = melt(value.name = "cluster", c(roary_outputs[,1:5]))
roary_outputs.m = melt( c(roary_outputs[,1:5]))
roary_outputs.m = melt( roary_outputs[,1:5])
match(roary_outputs.m$cluster, roary_outputs$cluster)
roary_outputs.m = cbind(roary_outputs.m,
size = roary_outputs$sizesmatch(roary_outputs.m$cluster, roary_outputs$cluster))
roary_outputs.m = melt( roary_outputs[,1:5])
roary_outputs.m = cbind(roary_outputs.m,
size = roary_outputs$sizes[match(roary_outputs.m$cluster, roary_outputs$cluster)])
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point() +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Rare genes")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point() +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point() +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Greys")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point() +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_color_brewer(palette = "Greys")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point(size = 2) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_color_brewer(palette = "Greys")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point(size = 2) +
theme_dark(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_color_brewer(palette = "Greys")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point(size = 2) +
theme_gray(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_color_brewer(palette = "Greys")
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point(size = 2) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_color_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE) +
geom_boxplot(width=0.1) +
scale_fill_brewer(palette = "Greys", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("") +
scale_x_discrete(labels = labs)
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE) +
geom_boxplot(width=0.1) +
scale_fill_brewer(palette = "Blues", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("") +
scale_x_discrete(labels = labs)
ggplot(roary_outputs.m, aes(y = value, x = size, color = variable)) + geom_point(size = 2, pch=21) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_color_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 2, pch=21, color = "black") +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 2, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula=value~size)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= value ~ size)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= y~x)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='auto',formula= y~x)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='auto',formula= y~x, se = F)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='glm',formula= y~x, se = F)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='glm',formula= y~x, se = F, aes(color = "black"))
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='glm',formula= y~x, se = F) + geom_line(color = "red")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='glm',formula= y~x, se = F, color = "red")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= y~x, se = F, color = "red")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= y~x, se = F, guide = F, aes(color = variable))
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= y~x, se = F, guide = F, aes(color = variable)) +
scale_color_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= y~x, se = T, guide = F, aes(color = variable)) +
scale_color_brewer(palette = "Blues")
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues")+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes","inter_genes",  "soft_core_genes", "core_genes"))
labs = c("Rare", "Intermediate", "Soft core", "Core")
roary_outputs$cluster = as.character(roary_outputs$cluster)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Blues") + theme_classic(base_size = 16)
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE) +
geom_boxplot(width=0.1) +
scale_fill_brewer(palette = "Blues", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("") +
scale_x_discrete(labels = labs)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Blues") + theme_classic(base_size = 16) +
scale_y_continuous(expand = c(0,0))
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Blues") + theme_classic(base_size = 16) +
scale_y_continuous(expand = c(0,0)) + xlab("Cluster") +
ylab("Genes")
roary_outputs.m$cluster = factor(roary_outputs.m$cluster, sort(as.numeric(unique(roary_outputs$cluster))))
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Blues") + theme_classic(base_size = 16) +
scale_y_continuous(expand = c(0,0)) + xlab("Cluster") +
ylab("Genes")
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Blues") + theme_classic(base_size = 16) +
scale_y_continuous(expand = c(0,0)) + xlab("Cluster") +
ylab("Genes")
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE) +
geom_boxplot(width=0.1) +
scale_fill_brewer(palette = "Blues", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("") +
scale_x_discrete(labels = labs)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
## add distances
roary_outputs.m = cbind(roary_outputs.m,
acc_dist = roary_outputs$acc_dist[match(roary_outputs.m$cluster, roary_outputs$cluster)])
ggplot(roary_outputs.m, aes(y = value, x = acc_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
## add distances
roary_outputs.m = cbind(roary_outputs.m,
acc_dist = roary_outputs$acc_max_dist[match(roary_outputs.m$cluster, roary_outputs$cluster)])
ggplot(roary_outputs.m, aes(y = value, x = acc_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
roary_outputs.m = melt( roary_outputs[,1:5])
roary_outputs.m = cbind(roary_outputs.m,
size = roary_outputs$sizes[match(roary_outputs.m$cluster, roary_outputs$cluster)])
roary_outputs.m$variable = factor(roary_outputs.m$variable, c("rare_genes","inter_genes",  "soft_core_genes", "core_genes"))
labs = c("Rare", "Intermediate", "Soft core", "Core")
roary_outputs.m$cluster = factor(roary_outputs.m$cluster, sort(as.numeric(unique(roary_outputs$cluster))))
## add distances
roary_outputs.m = cbind(roary_outputs.m,
acc_dist = roary_outputs$acc_max_dist[match(roary_outputs.m$cluster, roary_outputs$cluster)])
ggplot(roary_outputs.m, aes(y = value, x = acc_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
roary_outputs.m = cbind(roary_outputs.m,
core_dist = roary_outputs$core_dist[match(roary_outputs.m$cluster, roary_outputs$cluster)])
ggplot(roary_outputs.m, aes(y = value, x = core_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
ggplot(roary_outputs.m, aes(y = value, x = core_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)
ggplot(roary_outputs.m, aes(y = value, x = acc_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)
ggplot(roary_outputs.m, aes(y = value, x = acc_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F) +
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
### what's the connection between the size of the cluster and the core
## and accessory distances?
plot(roary_outputs$core_dist, roary_outputs$sizes)
plot(roary_outputs$acc_dist, roary_outputs$sizes)
### what's the connection between the size of the cluster and the core
## and accessory distances? There isn't a direct connection
plot(roary_outputs$core_dist, roary_outputs$sizes)
### what's the connection between the size of the cluster and the core
## and accessory distances? There isn't a direct connection
max(roary_outputs$core_dist)
max(roary_outputs$acc_dist)
### what's the connection between the size of the cluster and the core
## and accessory distances? There isn't a direct connection
max(roary_outputs$core_max_dist)
max(roary_outputs$acc_max_dist)
length(which(cluster_sizes$Size==1))
666/1185
plot(density(cluster_sizes))
plot(density(cluster_sizes$Size))
ggplot(cluster_sizes, aes(x = Size)) + geom_density()
4878 / sum(cluster_sizes$Size)
### Look at the metadata within each cluster
within_cluster_metadata = read.table("metadata_per_cluster.csv", sep = ",", header = T,
comment.char = "", stringsAsFactors = F)
### Look at the metadata within each cluster
within_cluster_metadata = read.table("metadata_per_cluster.csv", sep = ",", header = T,
comment.char = "", stringsAsFactors = F, quote = "")
### Look at the metadata within each cluster
within_cluster_metadata = read.table("metadata_per_cluster.csv", sep = ",", header = T,
comment.char = "", stringsAsFactors = F, quote = "")
### Look at the metadata within each cluster
within_cluster_metadata = read.csv("metadata_per_cluster.csv", sep = ",", header = T,
comment.char = "", stringsAsFactors = F, quote = "")
View(within_cluster_metadata)
### Look at the metadata within each cluster
within_cluster_metadata = read.table("metadata_per_cluster.csv", sep = "\t", header = T,
comment.char = "", stringsAsFactors = F, quote = "")
### Look at the metadata within each cluster
within_cluster_metadata = read.table("metadata_per_cluster.csv", sep = "\t", header = T,
comment.char = "", stringsAsFactors = F, quote = "")
View(within_cluster_metadata)
pathotype = within_cluster_metadata[which(within_cluster_metadata$variable == "Pathotype"),c(1,3,4)]
View(pathotype)
ggplot(pathotype, aes(x = cluster, y = count, fill = value)) + geom_barplot(stat = "identity")
ggplot(pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity")
ggplot(pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Dark2")
ggplot(pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Grays")
within_cluster_metadata$cluster = as.character(within_cluster_metadata$cluster)
pathotype = within_cluster_metadata[which(within_cluster_metadata$variable == "Pathotype"),c(1,3,4)]
ggplot(pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Grays")
ggplot(pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2")
ST = within_cluster_metadata[which(within_cluster_metadata$variable == "ST"),c(1,3,4)]
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2")
### Look at the metadata within each cluster
within_cluster_metadata = read.table("metadata_per_cluster.csv", sep = "\t", header = T,
comment.char = "", stringsAsFactors = F, quote = "")
within_cluster_metadata$cluster = as.character(within_cluster_metadata$cluster)
Pathotype = within_cluster_metadata[which(within_cluster_metadata$variable == "Pathotype"),c(1,3,4)]
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2")
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity")
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_brewer(guide = F)
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_manual(guide = F)
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_manual(values = "white",guide = F)
scale_fill_manual(values = rep("white", length(unique(Pathotype$value)),guide = F)
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_manual(values = rep("white", length(unique(Pathotype$value))),guide = F)
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity") +
scale_fill_manual(values = rep("white", length(unique(Pathotype$value))),guide = F)
ggplot(Pathotype, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = rep("white", length(unique(Pathotype$value))),guide = F)
Country = within_cluster_metadata[which(within_cluster_metadata$variable == "Country"),c(1,3,4)]
ggplot(Country, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")
Continent = within_cluster_metadata[which(within_cluster_metadata$variable == "Continent"),c(1,3,4)]
ggplot(Continent, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")
ST = within_cluster_metadata[which(within_cluster_metadata$variable == "ST"),c(1,3,4)]
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")+
scale_fill_manual(values = rep("white", length(unique(Pathotype$value))),guide = F)
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")+
scale_fill_manual(values = rep("white", length(unique(ST$value))),guide = F)
View(ST)
which(ST$count>0.75)
ST$value[which(ST$count>0.75)]
unique(ST$value[which(ST$count>0.75)])
length(unique(ST$value[which(ST$count>0.75)]))
length(unique(ST$value[which(ST$count>0.80)]))
length(unique(ST$value[which(ST$count>0.90)]))
length(unique(ST$value[which(ST$count>0.92)]))
length(unique(ST$value[which(ST$count>0.95)]))
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.95)])
cols = brewer.pal(n = length(common), "Set2")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
ST_factorised
ST_factorised[which(ST_factorised %in% cols)] = "white"
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")+
scale_fill_manual(values = ST_factorised,guide = F)
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.95)])
cols = brewer.pal(n = length(common), "Set2")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
ST_factorised[which(!ST_factorised %in% cols)] = "white"
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.95)])
cols = brewer.pal(n = length(common), "Set2")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
ST_factorised[which(!ST_factorised %in% cols)] = "white"
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.95)])
cols = brewer.pal(n = length(common), "Set2")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
ST_factorised
ST = within_cluster_metadata[which(within_cluster_metadata$variable == "ST"),c(1,3,4)]
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.95)])
cols = brewer.pal(n = length(common), "Set2")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
ST_factorised[which(!ST_factorised %in% cols)] = "white"
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")+
scale_fill_manual(values = ST_factorised,guide = F)
cols
len(cols)
length(cols)
common = unique(ST$value[which(ST$count>0.94)])
ST = within_cluster_metadata[which(within_cluster_metadata$variable == "ST"),c(1,3,4)]
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.94)])
cols = brewer.pal(n = length(common), "Set2")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
common
length(common)
ST = within_cluster_metadata[which(within_cluster_metadata$variable == "ST"),c(1,3,4)]
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.94)])
cols = brewer.pal(n = length(common), "Dark2")
ST = within_cluster_metadata[which(within_cluster_metadata$variable == "ST"),c(1,3,4)]
ST_factorised = unique(ST$value)
ST$value = factor(ST$value, ST_factorised)
common = unique(ST$value[which(ST$count>0.94)])
cols = brewer.pal(n = length(common), "Paired")
for (i in 1:length(common)){
c = common[i]
ST_factorised[ST_factorised == c] = cols[i]
}
ST_factorised[which(!ST_factorised %in% cols)] = "white"
ggplot(ST, aes(x = cluster, y = count, fill = value)) + geom_bar(stat = "identity", color = "black")+
scale_fill_manual(values = ST_factorised,guide = F)
ggplot(roary_outputs.m, aes(x = cluster, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_brewer(palette = "Blues") + theme_classic(base_size = 16) +
scale_y_continuous(expand = c(0,0)) + xlab("Cluster") +
ylab("Genes")
ggplot(roary_outputs.m, aes(x = variable, y = value, fill = variable))+
geom_violin(trim=FALSE) +
geom_boxplot(width=0.1) +
scale_fill_brewer(palette = "Blues", guide = F) +
theme_bw(base_size = 16) + ylab("Genes") + xlab("") +
scale_x_discrete(labels = labs)
ggplot(roary_outputs.m, aes(y = value, x = size, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Cluster size") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F)+
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
ggplot(roary_outputs.m, aes(y = value, x = acc_dist, fill = variable)) + geom_point(size = 3, pch=21, color = "black", alpha = 0.7) +
theme_bw(base_size = 16) + xlab("Within cluster accessory distance") + ylab("Genes") +
scale_fill_brewer(palette = "Blues", guide = F) +
geom_smooth(method='lm',formula= y~x, se = T, aes(color = variable)) +
scale_color_brewer(palette = "Blues", guide = F)
